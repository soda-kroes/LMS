
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "ViewMember";
}



@*DataTables CSS*@
<link href="https://cdn.datatables.net/1.10.24/css/dataTables.bootstrap4.min.css" rel="stylesheet">
<link href="~/web/ViewUser.css" rel="stylesheet" />
@*DataTables JS*@
<script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.24/js/dataTables.bootstrap4.min.js"></script>



<style>
    .txtTitle {
        font-family: "Jersey 25", sans-serif;
        font-weight: 400;
        font-style: normal;
        color: black;
        font-size: 22px;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-12">
            <!-- Page Heading -->
            <div class="d-sm-flex align-items-center justify-content-between mb-4">
                <div class="mb-0 text-gray-800"> <img src="~/assets/images/icons8-dashboard-48.png" style="width:25px; height:25px; margin-bottom:5px;" /> <span style="color:grey">Dashboard</span> <i class="fa-solid fa-angles-right" style="color:grey"></i> <span style="color:grey">Member</span></div>
                <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm text-light" data-target="#idFormMember" data-toggle="modal">
                    <i class="fa-solid fa-user-plus fa-sm text-white-50"></i> New Member
                </a>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="table-responsive">
            <div class="row">
                <div class="col-sm-12">
                    <table id="idMemberView" class="table table-bordered  table-sm table-hover" style="width:100%;">
                        <thead class="text-center">
                            <tr>
                                <th>No</th>
                                <th>IDCARD</th>
                                <th>FIRSTNAME</th>
                                <th>LASTNAME</th>
                                <th>GENDER</th>
                                <th>DATE OF BIRTH</th>
                                <th>EMAIL</th>
                                <th>TELL</th>
                                <th>ADDRESS</th>
                                <th>CREATE DATE</th>
                                <th>STATUS</th>
                                <th>ACTION</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>

@*----------------------------------------------------------Create Insert PopUp Form----------------------------------------------------------*@
<div class="modal fade" id="idFormMember" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><img src="~/assets//images//icons8-add-user-50.png" /><span class="txtTitle" style="margin-top:10px;">Create Member</span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="need-novalidate-new" novalidate>
                    <div class="row">
                        <div class="col-sm-6">
                            <div>
                                ID Card
                                <input id="txtIdCard" type="text" class="form-control" required />
                                <div class="invalid-feedback">The Id card field is required.</div>
                            </div>
                            <div style="margin-top:10px;">
                                FirstName
                                <input id="txtFirstName" type="text" class="form-control" required />
                                <div class="invalid-feedback">The firstname field is required.</div>
                            </div>
                            <div style="margin-top:10px;">
                                LastName
                                <input id="txtLastName" type="text" class="form-control" required />
                                <div class="invalid-feedback">The lastname field is required.</div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div>
                                Gender
                                <select class="form-control" id="ddlGender">
                                    <option value="Male" selected >Male</option>
                                    <option value="Female">Female</option>
                                </select>
                            </div>

                            <div style="margin-top:10px;">
                                Date Of Birth
                                <input id="txtDateOfBirth" type="date" class="form-control" required />
                                <div class="invalid-feedback">The date of birth field is required.</div>
                            </div>

                            <div style="margin-top:10px;">
                                Email
                                <input id="txtEmail" type="text" class="form-control" required />
                                <div class="invalid-feedback">The email field is required.</div>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px;">
                        <div class="col-sm-6">
                            Address
                            <input id="txtAddress" type="text" class="form-control" required />
                            <div class="invalid-feedback">The address field is required.</div>
                        </div>
                        <div class="col-sm-6">
                            Tell
                            <input id="txtTell" type="text" class="form-control" required />
                            <div class="invalid-feedback">The Tell field is required.</div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="btnSaveMember" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@*----------------------------------------------------------Create Insert PopUp Form----------------------------------------------------------*@

@*----------------------------------------------------------Create update PopUp Form----------------------------------------------------------*@
<div class="modal fade" id="idFormMemberUpdate" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><img src="~/assets//images//icons8-add-user-50.png" /><span class="txtTitle" style="margin-top:10px;">Update Member</span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="need-novalidate-new-update" novalidate>
                    <div class="row">
                        <div class="col-sm-6">
                            <div>
                                ID Card
                                <input id="txtIdCardUpdate" type="text" class="form-control" required />
                                <div class="invalid-feedback">The Id card field is required.</div>
                            </div>
                            <div style="margin-top:10px;">
                                FirstName
                                <input id="txtFirstNameUpdate" type="text" class="form-control" required />
                                <div class="invalid-feedback">The firstname field is required.</div>
                            </div>
                            <div style="margin-top:10px;">
                                LastName
                                <input id="txtLastNameUpdate" type="text" class="form-control" required />
                                <div class="invalid-feedback">The lastname field is required.</div>
                            </div>
                            
                        </div>
                        <div class="col-sm-6">
                            <div>
                                Gender
                                <select class="form-control" id="ddlGenderUpdate">
                                    <option value="Male" selected>Male</option>
                                    <option value="Female">Female</option>
                                </select>
                            </div>

                            <div style="margin-top:10px;">
                                Date Of Birth
                                <input id="txtDateOfBirthUpdate" type="date" class="form-control" required />
                                <div class="invalid-feedback">The date of birth field is required.</div>
                            </div>

                            <div style="margin-top:10px;">
                                Email
                                <input id="txtEmailUpdate" type="text" class="form-control" required />
                                <div class="invalid-feedback">The email field is required.</div>
                            </div>
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px;">
                        <div class="col-sm-6">
                            Address
                            <input id="txtAddressUpdate" type="text" class="form-control" required />
                            <div class="invalid-feedback">The address field is required.</div>
                        </div>
                        <div class="col-sm-6">
                            Tell
                            <input id="txtTellUpdate" type="text" class="form-control" required />
                            <div class="invalid-feedback">The Tell field is required.</div>
                        </div>

                    </div>

                    <div class="row" style="margin-top:10px;">
                        <div class="col-sm-6">
                            Created Date
                            <input id="txtCreatedDateUpdate" type="text" class="form-control" readonly />
                            <div class="invalid-feedback">The address field is required.</div>
                        </div>
                        <div class="col-sm-6">
                            Status
                            <select class="form-control" id="ddlStatusUpdate">
                                <option value="A" selected>Active</option>
                                <option value="I">Inactive</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="btnUpdateMember" class="btn btn-primary">Update</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@*----------------------------------------------------------Create Insert PopUp Form----------------------------------------------------------*@

<script type="text/javascript">


    //GET DATA
    $('#idMemberView').DataTable({
        data: Members,
        columns: [
            {
                render: function (data, type, full, meta) { return meta.row + 1; }
            },
            { data: "idCard" },
            { data: "firstName" },
            { data: "lastName" },
            { data: "gender" },
            { data: "dateOfBirthStr" },
            { data: "email" },
            { data: "tell" },
            { data: "address" },
            { data: "createdDateStr" },
            {
                data: "statusStr",
                render: function (data, type, full, meta) {
                    var colorClass = "";
                    if (data == "Active") {
                        colorClass = "badge-success";
                    } else {
                        colorClass = "badge-danger";
                    }
                    return '<span style="padding:3px;" class="badge ' + colorClass + '">' + data + '</span>';
                }
            },
            {
                render: function (data, type, full, meta) {
                    return '<a href="#" style="margin-right: 10px; color:#ff4d4d; font-size:14px;" onclick="remove(' + full.idCard + ')"><i class="fas fa-trash"></i></a>' + '<a style="font-size:14px;" href="#" onclick="edit(' + full.idCard + ')"><i class="fa-regular fa-pen-to-square"></i></a>'
                }
            }
             
        ]
    });

    var table = $('#idMemberView').DataTable();
    var Members = [];
    function getData() {
        // showLoading();
        $.ajax({
            url: '@Url.Action("GetMember","MemberJsonData")',
            type: "GET",
            dataType: "JSON",
            success: function (response) {
                if (response.errCode == 0) {
                    console.log(response);
                    // hideLoading();
                    Members = [];
                    Members = response.members;

                    table.clear();
                    table.rows.add(Members);
                    table.draw();
                } else {

                }
            }
        });
    }
    getData();





    // Hold screen to validation
    var form = document.getElementsByClassName('need-novalidate-new');
    var validation = Array.prototype.filter.call(form, function (forms) {
        forms.addEventListener('submit', function (event) {
            if (forms.checkValidity() == false) {
                event.preventDefault();
            }
            else {
                event.preventDefault();
                var submitButtonId = event.submitter.id;
                if (submitButtonId == "btnSaveMember") {
                    var obj = {};
                    obj.IdCard = $('#txtIdCard').val();
                    obj.FirstName = $('#txtFirstName').val();
                    obj.LastName = $('#txtLastName').val();
                    obj.Gender = $('#ddlGender').val();
                    obj.DateOfBirthStr = $('#txtDateOfBirth').val();
                    obj.Email = $('#txtEmail').val();
                    obj.Tell = $('#txtTell').val();
                    obj.Address = $("#txtAddress").val();

                    $('#idFormMember').modal('hide');
                    showLoading();

                    $.ajax({
                        url: '@Url.Action("PostMember","MemberJsonData")',
                        type: "POST",
                        dataType: "JSON",//OK
                        data: { objMember: obj },
                        success: function (response) {
                            if (response.errCode == 0) {
                                setTimeout(function () {
                                    hideLoading();
                                    Toast.fire({
                                        icon: 'success',
                                        title: response.errMsg
                                    })
                                    getData();

                                    // Reset the form
                                    forms.reset();
                                    forms.classList.remove('was-validated');
                                }, 2000);// Delay modal
                            }
                            else if (response.errCode == 1) {
                                hideLoading();
                                Toast.fire({
                                    icon: 'error',
                                    title: response.errMsg
                                })
                            }
                            else {
                                hideLoading();
                                Toast.fire({
                                    icon: 'error',
                                    title: response.errMsg
                                })
                            }
                        },
                    });
                }
               
            }
            forms.classList.add('was-validated');
        }, false);
    });




   


    function remove(memberId)
    {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteMember","MemberJsonData")',
                    type: "POST",
                    dataType: "JSON",//OK
                    data: { memberId: memberId },
                    success: function (response) {
                        if (response.errCode == 0) {
                            Swal.fire({
                                title: "Deleted!",
                                text: response.errMsg,
                                icon: "success"
                            });
                            getData();
                        } else {
                            Swal.fire({
                                title: "Error!",
                                text: response.errMsg,
                                icon: "error"
                            });
                        }
                    },
                });

            }
        });

    }

    var memeberIdCard;
    function edit(ID) {
        $('#idFormMemberUpdate').modal('show');
        memeberIdCard = ID;
        alert(memeberIdCard);
        $.ajax({
            url: '@Url.Action("GetMemberByIDcard","MemberJsonData")',
            type: "POST",
            dataType: "JSON",//OK
            data: { IdCard: memeberIdCard },
            success: function (response) {
                if (response.errCode == 0) {
                    console.log(response);
                     $('#txtIdCardUpdate').val(response.members[0].idCard);
                    $('#txtFirstNameUpdate').val(response.members[0].firstName);
                    $('#txtLastNameUpdate').val(response.members[0].lastName);
                    $('#ddlGenderUpdate').val(response.members[0].gender);
                    $('#txtDateOfBirthUpdate').val(response.members[0].dateOfBirthStr);
                    $('#txtEmailUpdate').val(response.members[0].email);
                    $('#txtTellUpdate').val(response.members[0].tell);
                    $("#txtAddressUpdate").val(response.members[0].address);
                    $("#txtCreatedDateUpdate").val(response.members[0].createdDateStr); 
                    $("#ddlStatusUpdate").val(response.members[0].statusStr);
                    if (response.members[0].statusStr == "Inactive"){
                        $("#ddlStatusUpdate").val("I");
                    }else{
                        $("#ddlStatusUpdate").val("A");
                    }

                } else {

                }
            },
        });

    }

    // Hold screen to validation
    var form = document.getElementsByClassName('need-novalidate-new-update');
    var validation = Array.prototype.filter.call(form, function (forms) {
        forms.addEventListener('submit', function (event) {
            if (forms.checkValidity() == false) {
                event.preventDefault();
            }
            else {
                event.preventDefault();

                var submitButtonId = event.submitter.id;
                if (submitButtonId == "btnUpdateMember") {
                    alert(1111);
                    var obj = {};
                    obj.IdCard = $('#txtIdCardUpdate').val();
                    obj.FirstName = $('#txtFirstNameUpdate').val();
                    obj.LastName = $('#txtLastNameUpdate').val();
                    obj.Gender = $('#ddlGenderUpdate').val();
                    obj.DateOfBirthStr = $('#txtDateOfBirthUpdate').val();
                    obj.Email = $('#txtEmailUpdate').val();
                    obj.Tell = $('#txtTellUpdate').val();
                    obj.Address = $("#txtAddressUpdate").val();
                    obj.StatusStr = $("#ddlStatusUpdate").val();

                    $('#idFormMemberUpdate').modal('hide');
                    showLoading();

                    $.ajax({
                        url: '@Url.Action("UpdateMember","MemberJsonData")',
                        type: "POST",
                        dataType: "JSON",//OK
                        data: { objMember: obj },
                        success: function (response) {
                            if (response.errCode == 0) {
                                setTimeout(function () {
                                    hideLoading();
                                    Toast.fire({
                                        icon: 'success',
                                        title: response.errMsg
                                    })
                                    getData();

                                    // Reset the form
                                    forms.reset();
                                    forms.classList.remove('was-validated');
                                }, 2000);// Delay modal
                            }
                            else {
                                hideLoading();
                                Toast.fire({
                                    icon: 'error',
                                    title: response.errMsg
                                })
                            }
                        },
                    });
                }
            }
            forms.classList.add('was-validated');
        }, false);
    });


    //------------------------------------- For Loading -------------------------------
    function showLoading() {
        var loadingIndicatorOverlay = document.createElement('div');
        loadingIndicatorOverlay.classList.add('loading-indicator-overlay');

        var loadingIndicator = document.createElement('div');
        loadingIndicator.classList.add('loading-indicator');

        var loadingText = document.createElement('div');
        loadingText.classList.add('loading-text');
        loadingText.textContent = 'Please wait...';

        loadingIndicatorOverlay.appendChild(loadingIndicator);
        loadingIndicatorOverlay.appendChild(loadingText);
        document.body.appendChild(loadingIndicatorOverlay);

        return true;
    }

    function hideLoading() {
        var loadingIndicator = document.querySelector('.loading-indicator-overlay');
        if (loadingIndicator) {
            loadingIndicator.remove();
        }
    }




</script>